<launch>
  <!-- camera -->
  <!-- Determine this using rosrun pointgrey_camera_driver list_cameras.
       If not specified, defaults to first camera found. -->
  <arg name="camera_serial" default="0" />
  <arg name="calibrated" default="0" />
  <arg name="visualize" default="true"/>

  <group ns="camera">
    <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />

    <node pkg="nodelet" type="nodelet" name="camera_nodelet"
          args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
      <param name="frame_id" value="camera" />
      <param name="serial" value="$(arg camera_serial)" />

      <!-- When unspecified, the driver will use the default framerate as given by the
           camera itself. Use this parameter to override that value for cameras capable of
           other framerates. -->

      <param name="video_mode" value="format7_mode0" />
      <param name="frame_rate" value="163" />
      <param name="format7_color_coding" value="mono8" />

      <!-- Anti flickering stuff-->
      <param name="auto_exposure" value="False" />
      <param name="exposure" value="0" />
      <param name="auto_shutter" value="False" />
      <param name="shutter_speed" value="0.0015" />
      <param name="auto_gain" value="False" />
      <param name="gain" value="0" />

      <!-- Use the camera_calibration package to create this file -->
      <!-- <param name="camera_info_url" if="$(arg calibrated)" -->
      <!--        value="file://$(env HOME)/.ros/camera_info/$(arg camera_serial).yaml" /> -->
    </node>

    <node if="$(arg visualize)" name="camera_image_view" pkg="image_view" type="image_view">
      <remap from="image" to="image_raw" />
    </node>
  </group>

  <include file="$(find blob_tracker)/launch/blob_tracker.launch" >
    <!-- <arg name="background_image_path" value="" /> -->
  </include>

  <node if="$(arg visualize)" name="camera_image_view" pkg="image_view" type="image_view">
    <remap from="image" to="/camera/blob_out/image_raw" />
  </node>

</launch>
